syntax = "proto3";
package dev.jasser.configDaemon;

// Service for dynamic configuration updates.
service DynamicConfigurationService {
  // Bi-directional stream:
  //  - Client sends a JoinRequest first.
  //  - Server streams ConfigurationUpdate messages.
  //  - Client sends Acknowledgment messages after processing updates.
  rpc Subscribe (stream ClientMessage) returns (stream ConfigurationUpdate);
}

// Messages sent by the client (JoinRequest or Acknowledgment).
message ClientMessage {
  oneof payload {
    JoinRequest join_request = 1;  // Sent only once at the beginning.
    Acknowledgment acknowledgment = 2;  // Sent after each received update.
  }
}

// Client initiates the connection with this request.
message JoinRequest {
  string key = 1;  // Cluster key for identification.
}
// Client sends this after receiving an update.
message Acknowledgment {
  int32 transaction_id = 1;  // The ID of the update being acknowledged.
  bool success = 2;           // Whether the update was successfully applied.
  string message = 3;         // Optional details or error message.
}

// Server streams continuous configuration updates.
message ConfigurationUpdate {
  int32 transactionId = 1;  // Unique identifier for tracking.
  string key = 2;  // Key for the configuration being updated.
  string value = 3;          // New value for the configuration.
  string message = 4;            // Optional description of the update.
}